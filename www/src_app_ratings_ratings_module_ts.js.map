{"version":3,"file":"src_app_ratings_ratings_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AAEV;;;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAW;KACvB;CACF,CAAC;AAMK,MAAM,wBAAwB;;gGAAxB,wBAAwB;qHAAxB,wBAAwB;yHAHzB,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEX,wBAAwB,oFAFzB,yDAAY;;;;;;;;;;;;;;;;;;;;;ACbuB;AACF;AAEA;AAEuB;AAEvB;;AAWtC,MAAM,iBAAiB;;kFAAjB,iBAAiB;8GAAjB,iBAAiB;kHAP1B,yDAAY;QACZ,uDAAW;QACX,uDAAW;QACX,6EAAwB;mIAIf,iBAAiB,mBAFb,sDAAW,aALxB,yDAAY;QACZ,uDAAW;QACX,uDAAW;QACX,6EAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;IER1B,8EAAuD;IACrD,yEAAoE;IACpE,4EAAW;IAAA,uDAAkB;IAAA,4DAAY;IACzC,uEAAc;IAAA,uDAAiB;IAAA,yEAAmD;IAAA,4DAAI;;;IAD3E,0DAAkB;IAAlB,4GAAkB;IACf,0DAAiB;IAAjB,oHAAiB;;ADF5B,MAAM,WAAW;IAItB,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAH/C,aAAQ,GAAe,EAAE,CAAC;QAEjC,WAAM,GAAQ,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACc,CAAC;IAE1D,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEH,YAAY;QACV,kDAAkD;QAClD,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACrE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEjB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IACK,gBAAgB,CAAC,EAAO;;YAC5B,0CAA0C;YAC1C,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;YACpE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC;KAAA;;sEAtBY,WAAW;yGAAX,WAAW;QCRxB,6EAAY;QACI,gFAAgD;QAC5D,4EAAW;QAAA,kEAAO;QAAA,4DAAY;QAIlC,8EAAa;QACX,iHAIW;QACb,4DAAc;;QAL8B,0DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;;;;;;ACNE;AAWxB;AAC8B;AACjB;;;;AAKvC,MAAM,gBAAgB;IAC3B,YAAmB,SAAoB,EAAS,IAAU;QAAvC,cAAS,GAAT,SAAS,CAAW;QAAS,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAE/D,YAAY;QACV,MAAM,OAAO,GAAG,mEAAU,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAEpD,OAAO,0CAAI,CACT,gEAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5B,OAAO;gBACL,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;oBAC3B,uCAAY,GAAG,CAAC,IAAI,EAAE,KAAE,EAAE,EAAE,GAAG,CAAC,EAAE,IAAG;gBACvC,CAAC,CAAC;aACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACD,iBAAiB,CAAC,EAAE;QAClB,MAAM,OAAO,GAAG,mEAAU,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACpD,MAAM,UAAU,GAAG,8DAAK,CAAC,OAAO,EAAE,8DAAK,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAE1D,OAAO,0CAAI,CACT,gEAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC/B,OAAO;gBACL,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;oBAC3B,uCAAY,GAAG,CAAC,IAAI,EAAE,KAAE,EAAE,EAAE,GAAG,CAAC,EAAE,IAAG;gBACvC,CAAC,CAAC;aACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACD,gBAAgB,CAAC,EAAO;QACtB,MAAM,OAAO,GAAG,4DAAG,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,GAAG,EAAE,CAAC,CAAC;QAEnD,OAAO,0CAAI,CACT,+DAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC3B,OAAO,iCAAM,GAAG,CAAC,IAAI,EAAE,KAAE,EAAE,EAAE,GAAG,CAAC,EAAE,IAAG,CAAC;QACzC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEK,MAAM,CAAC,IAAS;;YACpB,MAAM,aAAa,GAAG,mEAAU,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YAC7D,IAAI;gBACF,MAAM,UAAU,GAAG,MAAM,6EAA8B,CACrD,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,QAAQ,CACd,CAAC;gBAEF,MAAM,KAAK,mCACN,IAAI,KACP,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,GAAG,EACxB,IAAI,EAAE,UAAU,GACjB,CAAC;gBACF,OAAO,0CAAI,CAAC;oBACV,iEAAa,CAAC,UAAU,CAAC,IAAI,EAAE;wBAC7B,WAAW,EAAE,IAAI,CAAC,SAAS;qBAC5B,CAAC;yBACC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC;wBACX,+DAAM,CAAC,aAAa,EAAE,KAAK,CAAC;6BACzB,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;4BACf,MAAM,EAAE,SAAS;4BACjB,OAAO,EAAE,kCAAkC;yBAC5C,CAAC,CAAC;6BACJ,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;4BACb,MAAM,EAAE,OAAO;4BACf,OAAO,EAAE,GAAG;yBACb,CAAC,CAAC;qBACR,CAAC;yBACH,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;wBACb,MAAM,EAAE,OAAO;wBACf,OAAO,EAAE,GAAG;qBACb,CAAC,CAAC;iBACR,CAAC,CAAC;aACJ;YACD,OAAO,GAAG,EAAE;gBACV,OAAO;oBACL,MAAM,EAAE,OAAO;oBACf,OAAO,EAAE,GAAG;iBACb,CAAC;aACH;QACH,CAAC;KAAA;IAED,mBAAmB;IAEnB,eAAe;QACb,MAAM,cAAc,GAAG,mEAAU,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;QAEjE,OAAO,0CAAI,CACT,gEAAO,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACnC,OAAO;gBACL,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;oBAC3B,uCAAY,GAAG,CAAC,IAAI,EAAE,KAAE,EAAE,EAAE,GAAG,CAAC,EAAE,IAAG;gBACvC,CAAC,CAAC;aACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACD,sBAAsB,CAAC,EAAO;QAC5B,MAAM,cAAc,GAAG,mEAAU,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;QAEjE,MAAM,UAAU,GAAG,8DAAK,CAAC,cAAc,EAAE,8DAAK,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,EAAC,gEAAO,CAAC,MAAM,EAAC,MAAM,CAAC,CAAC,CAAC;QAE5F,OAAO,0CAAI,CACT,gEAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC/B,OAAO;gBACL,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;oBAC3B,uCAAY,GAAG,CAAC,IAAI,EAAE,KAAE,EAAE,EAAE,GAAG,CAAC,EAAE,IAAG;gBACvC,CAAC,CAAC;aACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,qBAAqB,CAAC,KAAU;QAC9B,MAAM,cAAc,GAAG,mEAAU,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;QAEjE,MAAM,UAAU,GAAG,8DAAK,CAAC,cAAc,EAAE,8DAAK,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,EAAC,gEAAO,CAAC,MAAM,EAAC,MAAM,CAAC,CAAC,CAAC;QAE7F,OAAO,0CAAI,CACT,gEAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC/B,OAAO;gBACL,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;oBAC3B,uCAAY,GAAG,CAAC,IAAI,EAAE,KAAE,EAAE,EAAE,GAAG,CAAC,EAAE,IAAG;gBACvC,CAAC,CAAC;aACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACD,oCAAoC;IAEpC,uBAAuB,CAAC,EAAO;QAC7B,MAAM,cAAc,GAAG,4DAAG,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,EAAE,CAAC,CAAC;QAE/D,OAAO,0CAAI,CACT,+DAAM,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAClC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;QACtB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,yBAAyB;IACnB,oBAAoB,CAAC,EAAO;;YAChC,MAAM,QAAQ,GAAG,mEAAU,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YAExD,MAAM,SAAS,GAAG,8DAAK,CAAC,QAAQ,EAAE,8DAAK,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YAE9D,eAAe;YACf,uCAAuC;YACvC,eAAe;YACf,wCAAwC;YACxC,gDAAgD;YAChD,YAAY;YACZ,SAAS;YACT,OAAO;YACP,KAAK;YAEL,MAAM,QAAQ,GAAG,MAAM,gEAAO,CAAC,SAAS,CAAC,CAAC;YAE1C,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBAC/B,OAAO;oBACL,WAAW,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC;oBACxC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC;iBAC3B,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAED,eAAe;IAEf,WAAW;QACT,MAAM,QAAQ,GAAG,mEAAU,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAExD,OAAO,0CAAI,CACT,gEAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7B,OAAO;gBACL,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;oBAC3B,uCAAY,GAAG,CAAC,IAAI,EAAE,KAAE,EAAE,EAAE,GAAG,CAAC,EAAE,IAAG;gBACvC,CAAC,CAAC;aACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACK,mBAAmB,CAAC,EAAO;;YAC/B,MAAM,QAAQ,GAAG,mEAAU,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YAExD,MAAM,UAAU,GAAG,8DAAK,CAAC,QAAQ,EAAE,8DAAK,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YAE/D,eAAe;YACf,wCAAwC;YACxC,eAAe;YACf,wCAAwC;YACxC,gDAAgD;YAChD,YAAY;YACZ,SAAS;YACT,OAAO;YACP,KAAK;YAEL,MAAM,QAAQ,GAAG,MAAM,gEAAO,CAAC,UAAU,CAAC,CAAC;YAE3C,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBAC/B,OAAO;oBACL,UAAU,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC;oBACtC,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC;oBAC9B,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC;oBAChC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC;iBAC3B,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAED,wBAAwB;IAClB,mBAAmB,CAAC,EAAO;;YAC/B,MAAM,OAAO,GAAG,mEAAU,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;YAEtD,MAAM,QAAQ,GAAG,8DAAK,CAAC,OAAO,EAAE,8DAAK,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YAE5D,eAAe;YACf,sCAAsC;YACtC,eAAe;YACf,wCAAwC;YACxC,gDAAgD;YAChD,YAAY;YACZ,SAAS;YACT,OAAO;YACP,KAAK;YACL,MAAM,QAAQ,GAAG,MAAM,gEAAO,CAAC,QAAQ,CAAC,CAAC;YAEzC,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,SAAS,CAAa,CAAC,CAAC;QACzE,CAAC;KAAA;;gFAnOU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM","sources":["./src/app/ratings/ratings-routing.module.ts","./src/app/ratings/ratings.module.ts","./src/app/ratings/ratings.page.ts","./src/app/ratings/ratings.page.html","./src/app/services/firestore.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RatingsPage } from './ratings.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RatingsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RatingsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RatingsPageRoutingModule } from './ratings-routing.module';\r\n\r\nimport { RatingsPage } from './ratings.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RatingsPageRoutingModule\r\n  ],\r\n  declarations: [RatingsPage]\r\n})\r\nexport class RatingsPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FirestoreService } from '../services/firestore.service';\r\n\r\n@Component({\r\n  selector: 'app-ratings',\r\n  templateUrl: './ratings.page.html',\r\n  styleUrls: ['./ratings.page.scss'],\r\n})\r\nexport class RatingsPage implements OnInit {\r\n  public feedback: Array<any> = [];\r\n\r\n  userId: any = localStorage.getItem('user');\r\n  constructor(private firestoreService: FirestoreService) {}\r\n\r\n  ngOnInit() {\r\n    this.getSalonData();\r\n  }\r\n\r\ngetSalonData() {\r\n  // returns the salon of a user; depends on user ID\r\n  this.firestoreService.getSalonDataByUid(this.userId).subscribe((res) => {\r\n    console.log(res);\r\n\r\n    this.getSalonfeedback(res[0].id);\r\n  });\r\n}\r\nasync getSalonfeedback(id: any) {\r\n  // returns the appointments based on salon\r\n  this.feedback = await this.firestoreService.getfeedbacksBySalon(id);\r\n  console.log(this.feedback);\r\n}\r\n}\r\n","<ion-header>\r\n  <ion-toolbar> <ion-back-button slot=\"start\"></ion-back-button>\r\n    <ion-title>Ratings</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<!-- all ratings and feedback -->\r\n<ion-content>\r\n  <ion-item lines=\"none\" *ngFor=\"let review of feedback\">\r\n    <ion-icon name=\"person\" slot=\"start\" class=\"person-icon\"></ion-icon>\r\n    <ion-label>{{review?.review}}</ion-label>\r\n    <p slot=\"end\">{{review?.star}} <ion-icon name=\"star\" class=\"star-icon\"></ion-icon></p>\r\n  </ion-item>\r\n</ion-content>\r\n\r\n \r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Auth, updateProfile } from '@angular/fire/auth';\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  Firestore,\r\n  getDoc,\r\n  getDocs,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from '@angular/fire/firestore';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { from, Observable, pipe } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FirestoreService {\r\n  constructor(public firestore: Firestore, public auth: Auth,) {}\r\n\r\n  getSalonData(): Observable<any> {\r\n    const salonDb = collection(this.firestore, 'salon');\r\n\r\n    return from(\r\n      getDocs(salonDb).then((res) => {\r\n        return [\r\n          ...res.docs.map((doc: any) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          }),\r\n        ];\r\n      })\r\n    );\r\n  }\r\n  getSalonDataByUid(id): Observable<any> {\r\n    const salonDb = collection(this.firestore, 'salon');\r\n    const salonquery = query(salonDb, where('uid', '==', id));\r\n\r\n    return from(\r\n      getDocs(salonquery).then((res) => {\r\n        return [\r\n          ...res.docs.map((doc: any) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          }),\r\n        ];\r\n      })\r\n    );\r\n  }\r\n  getSpecificSalon(id: any): Observable<any> {\r\n    const salonDb = doc(this.firestore, 'salon/' + id);\r\n\r\n    return from(\r\n      getDoc(salonDb).then((res) => {\r\n        return [{ ...res.data(), id: res.id }];\r\n      })\r\n    );\r\n  }\r\n\r\n  async signUp(data: any) {\r\n    const usersInstance = collection(this.firestore, 'customer');\r\n    try {\r\n      const createUser = await createUserWithEmailAndPassword(\r\n        this.auth,\r\n        data.email,\r\n        data.password\r\n      );\r\n\r\n      const data2 = {\r\n        ...data,\r\n        uid: createUser.user.uid,\r\n        type: 'customer',\r\n      };\r\n      return from([\r\n        updateProfile(createUser.user, {\r\n          displayName: data.firstName,\r\n        })\r\n          .then((res) => [\r\n              addDoc(usersInstance, data2)\r\n                .then((result) => ({\r\n                    status: 'success',\r\n                    message: 'Customer Registered Successfully',\r\n                  }))\r\n                .catch((err) => ({\r\n                    status: 'error',\r\n                    message: err,\r\n                  })),\r\n            ])\r\n          .catch((err) => ({\r\n              status: 'error',\r\n              message: err,\r\n            })),\r\n      ]);\r\n    }\r\n    catch (err) {\r\n      return {\r\n        status: 'error',\r\n        message: err,\r\n      };\r\n    }\r\n  }\r\n\r\n  // get Appointments\r\n\r\n  getAppointments() {\r\n    const appointmentsDb = collection(this.firestore, 'Appointment');\r\n\r\n    return from(\r\n      getDocs(appointmentsDb).then((res) => {\r\n        return [\r\n          ...res.docs.map((doc: any) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          }),\r\n        ];\r\n      })\r\n    );\r\n  }\r\n  getAppointmentsBySalon(id: any) {\r\n    const appointmentsDb = collection(this.firestore, 'Appointment');\r\n\r\n    const salonquery = query(appointmentsDb, where('salonId', '==', id),orderBy('date','desc'));\r\n\r\n    return from(\r\n      getDocs(salonquery).then((res) => {\r\n        return [\r\n          ...res.docs.map((doc: any) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          }),\r\n        ];\r\n      })\r\n    );\r\n  }\r\n\r\n  getAppointmentsByUser(email: any) {\r\n    const appointmentsDb = collection(this.firestore, 'Appointment');\r\n\r\n    const salonquery = query(appointmentsDb, where('email', '==', email),orderBy('date','desc'));\r\n\r\n    return from(\r\n      getDocs(salonquery).then((res) => {\r\n        return [\r\n          ...res.docs.map((doc: any) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          }),\r\n        ];\r\n      })\r\n    );\r\n  }\r\n  // get Specific appoints required ID\r\n\r\n  getSpecificAppointments(id: any) {\r\n    const appointmentsDb = doc(this.firestore, 'Appointment/', id);\r\n\r\n    return from(\r\n      getDoc(appointmentsDb).then((res) => {\r\n        return [res.data()];\r\n      })\r\n    );\r\n  }\r\n\r\n  // get Services per Salon\r\n  async getServicesBySalonId(id: any) {\r\n    const services = collection(this.firestore, 'services');\r\n\r\n    const servicesQ = query(services, where('salonId', '==', id));\r\n\r\n    // return from(\r\n    //   getDocs(servicesQ).then((res) => {\r\n    //     return [\r\n    //       ...res.docs.map((doc: any) => {\r\n    //         return { ...doc.data(), id: doc.id };\r\n    //       }),\r\n    //     ];\r\n    //   })\r\n    // );\r\n\r\n    const snapshot = await getDocs(servicesQ);\r\n\r\n    return snapshot.docs.map(value => {\r\n      return {\r\n        subCategory: value.data()['subCategory'],\r\n        cost: value.data()['cost']\r\n      };\r\n    });\r\n  }\r\n\r\n  // get feedback\r\n\r\n  getfeedback() {\r\n    const feedback = collection(this.firestore, 'feedback');\r\n\r\n    return from(\r\n      getDocs(feedback).then((res) => {\r\n        return [\r\n          ...res.docs.map((doc: any) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          }),\r\n        ];\r\n      })\r\n    );\r\n  }\r\n  async getfeedbacksBySalon(id: any) {\r\n    const feedback = collection(this.firestore, 'feedback');\r\n\r\n    const salonquery = query(feedback, where('salonId', '==', id));\r\n\r\n    // return from(\r\n    //   getDocs(salonquery).then((res) => {\r\n    //     return [\r\n    //       ...res.docs.map((doc: any) => {\r\n    //         return { ...doc.data(), id: doc.id };\r\n    //       }),\r\n    //     ];\r\n    //   })\r\n    // );\r\n\r\n    const snapshot = await getDocs(salonquery);\r\n\r\n    return snapshot.docs.map(value => {\r\n      return {\r\n        customerID: value.data()['customerID'],\r\n        review: value.data()['review'],\r\n        salonId: value.data()['salonId'],\r\n        star: value.data()['star'],\r\n      };\r\n    });\r\n  }\r\n\r\n  // get stylist per salon\r\n  async getstylistBySalonId(id: any) {\r\n    const stylist = collection(this.firestore, 'stylist');\r\n\r\n    const stylistQ = query(stylist, where('salonId', '==', id));\r\n\r\n    // return from(\r\n    //   getDocs(stylistQ).then((res) => {\r\n    //     return [\r\n    //       ...res.docs.map((doc: any) => {\r\n    //         return { ...doc.data(), id: doc.id };\r\n    //       }),\r\n    //     ];\r\n    //   })\r\n    // );\r\n    const snapshot = await getDocs(stylistQ);\r\n\r\n    return snapshot.docs.map(value => value.data()['stylist'] as string[]);\r\n  }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}