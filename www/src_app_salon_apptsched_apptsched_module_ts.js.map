{"version":3,"file":"src_app_salon_apptsched_apptsched_module_ts.js","mappings":"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","sources":["./src/app/salon/apptsched/apptsched-routing.module.ts","./src/app/salon/apptsched/apptsched.module.ts","./src/app/salon/apptsched/apptsched.page.ts","./src/app/salon/apptsched/apptsched.page.html","./node_modules/@emailjs/browser/es/api/sendPost.js","./node_modules/@emailjs/browser/es/index.js","./node_modules/@emailjs/browser/es/methods/init/init.js","./node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","./node_modules/@emailjs/browser/es/methods/send/send.js","./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","./node_modules/@emailjs/browser/es/store/store.js","./node_modules/@emailjs/browser/es/utils/validateParams.js"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ApptschedPage } from './apptsched.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ApptschedPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ApptschedPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ApptschedPageRoutingModule } from './apptsched-routing.module';\n\nimport { ApptschedPage } from './apptsched.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ApptschedPageRoutingModule,\n    \n    \n  ],\n  declarations: [ApptschedPage]\n})\nexport class ApptschedPageModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Auth} from '@angular/fire/auth';\r\nimport { ModalController, ToastController } from '@ionic/angular';\r\nimport { FirestoreService } from 'src/app/services/firestore.service';\r\nimport emailjs, { EmailJSResponseStatus, init} from '@emailjs/browser';\r\n\r\n\r\n@Component({\r\n  selector: 'app-apptsched',\r\n  templateUrl: './apptsched.page.html',\r\n  styleUrls: ['./apptsched.page.scss'],\r\n})\r\nexport class ApptschedPage implements OnInit {\r\n  public appointments: Array<any> = [];\r\n\r\n  salonId: string = \"\";\r\n  userId: any = localStorage.getItem('user');\r\n  constructor(private firestoreService: FirestoreService,\r\n    private auth: Auth, \r\n    private toast:ToastController,\r\n  \r\n) { this.salonId =  \"test\"\r\n}\r\n\r\n  ngOnInit() {\r\n    this.getSalonData();\r\n  }\r\n\r\n \r\n  getSalonData() {\r\n    // returns the salon of a user; depends on user ID\r\n    this.firestoreService.getSalonDataByUid(this.userId).subscribe((res) => {\r\n      console.log(res);\r\n\r\n      this.getSalonAppointment(res[0].id);\r\n    });\r\n  }\r\n\r\n  getSalonAppointment(id: any) {\r\n    // returns the appointments based on salon\r\n    this.firestoreService.getAppointmentsBySalon(id).subscribe((res) => {\r\n      console.log(res);\r\n\r\n      this.appointments = res;  \r\n    });\r\n  }\r\n  async presentToast(message: string) {\r\n    const toast = await this.toast.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n\r\n    toast.present();\r\n  }\r\n\r\n// ACCEPTED EMAIL NOTIF\r\nsendEmailNotif(name: string, email: string) {\r\n  let data ={\r\n    toEmail: email,\r\n    name: name,\r\n\r\n  };\r\n  const gmailConfig = \"service_w6x4ayq\";\r\n  const templateId = \"template_dctp3kj\";\r\n  const publicKey = \"dOs8mWHCTDEax3WJg\";\r\n\r\n  emailjs\r\n  .send(gmailConfig, templateId, data, publicKey)\r\n  .then((res: EmailJSResponseStatus)=>{\r\n    console.log(res.text);\r\n    this.presentToast('Email Sent');\r\n  });\r\n}\r\n\r\n// DENIED EMAIL NOTIF\r\nsendEmailNotif2(name: string, email: string) {  \r\n  let data ={\r\n    email: email,\r\n    name: name,\r\n  };\r\n\r\n  const gmailConfig = \"service_w6x4ayq\";\r\n  const templateId = \"template_mn69e4g\";\r\n  const publicKey = \"dOs8mWHCTDEax3WJg\";\r\n\r\n  emailjs\r\n  .send(gmailConfig, templateId, data, publicKey)\r\n  .then((res: EmailJSResponseStatus)=>{\r\n    console.log(res.text);\r\n    this.presentToast('Email Sent');\r\n  });\r\n}\r\n}\r\n","<ion-header>\r\n  <ion-toolbar>    <ion-buttons slot=\"start\">\r\n    <ion-back-button></ion-back-button>\r\n  </ion-buttons>\r\n    <ion-title>Appointment Schedule</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-label class=\"list-cust\">List of Customers</ion-label>\r\n    <ion-card class=\"table-container\">\r\n      <ion-grid [fixed]=\"true\">\r\n        <ion-row class=\"font-title\">\r\n          <ion-col>Name of Customer</ion-col>\r\n          <ion-col>Service</ion-col>\r\n          <ion-col>Stylist</ion-col>\r\n          <ion-col>Date</ion-col>\r\n          <ion-col>Time</ion-col>\r\n          <ion-col >Request</ion-col>\r\n        </ion-row>\r\n\r\n        <ion-row *ngFor=\"let appointment of appointments\">\r\n          <ion-col>{{appointment?.name}}</ion-col>\r\n          <ion-col>{{appointment?.service}}</ion-col>\r\n          <ion-col>{{appointment?.stylist}}</ion-col>\r\n          <ion-col>{{appointment?.date}}</ion-col>\r\n          <ion-col>{{appointment?.time}}</ion-col>\r\n          \r\n          <ion-col ><button class=\"button\" (click)=\"sendEmailNotif(appointment?.name, appointment?.email)\">Accept\r\n          </button><br><br>\r\n          <button class=\"button\" (click)=\"sendEmailNotif2(appointment?.name, appointment?.email)\">Reject</button></ion-col>\r\n        </ion-row>\r\n\r\n\r\n        \r\n      </ion-grid>\r\n    </ion-card>\r\n</ion-content>\r\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.10.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.10.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n"],"names":["EmailJSResponseStatus","store","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","status","text","open","_origin","Object","keys","forEach","key","setRequestHeader","send","init","sendForm","publicKey","origin","_userID","validateParams","findHTMLForm","form","currentForm","document","querySelector","nodeName","serviceID","templateID","uID","formData","FormData","append","templatePrams","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","constructor","httpResponse","responseText"],"sourceRoot":"webpack:///","x_google_ignoreList":[4,5,6,7,8,9,10,11]}