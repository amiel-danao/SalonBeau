{"version":3,"file":"src_app_salon_addservice_addservice_module_ts.js","mappings":"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","sources":["./src/app/salon/addservice/addservice-routing.module.ts","./src/app/salon/addservice/addservice.module.ts","./src/app/salon/addservice/addservice.page.ts","./src/app/salon/addservice/addservice.page.html","./src/app/services/firestore.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddservicePage } from './addservice.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddservicePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddservicePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddservicePageRoutingModule } from './addservice-routing.module';\r\n\r\nimport { AddservicePage } from './addservice.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AddservicePageRoutingModule\r\n  ],\r\n  declarations: [AddservicePage]\r\n})\r\nexport class AddservicePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { addDoc, collection, Firestore } from '@angular/fire/firestore';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { FirestoreService } from 'src/app/services/firestore.service';\r\n\r\n@Component({\r\n  selector: 'app-addservice',\r\n  templateUrl: './addservice.page.html',\r\n  styleUrls: ['./addservice.page.scss'],\r\n})\r\nexport class AddservicePage implements OnInit {\r\n  public cost: string = '';\r\n  public category: string = '';\r\n  public subCategory: string = '';\r\n  public salonId: string = '';\r\n  userId: any = localStorage.getItem('user');\r\n\r\n  constructor(\r\n    private firestore: Firestore,\r\n    private firestoreService: FirestoreService,\r\n    private toast: ToastController,\r\n    private router: Router\r\n  ) {}\r\n  async presentToast(message: string) {\r\n    const toast = await this.toast.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n\r\n    toast.present();\r\n  }\r\n\r\n  clear() {\r\n    (this.category = ''), (this.cost = ''), (this.subCategory = '');\r\n  }\r\n  ngOnInit() {\r\n    this.getSalonData();\r\n  }\r\n  getSalonData() {\r\n    // returns the salon of a user; depends on user ID\r\n    this.firestoreService.getSalonDataByUid(this.userId).subscribe((res) => {\r\n      console.log(res);\r\n\r\n      this.salonId = res[0].id;\r\n      this.getServices(res[0].id);\r\n    });\r\n  }\r\n\r\n  // adding services\r\n  addServices() {\r\n    // validation if fields are empty\r\n    if (this.cost == '' && this.subCategory == '') {\r\n      this.presentToast('Please fill up the fields ');\r\n      this.clear();\r\n\r\n      return;\r\n    }\r\n\r\n    // validation if no salon\r\n\r\n    if (!this.salonId) {\r\n      this.presentToast('Please select a salon ');\r\n      this.clear();\r\n\r\n      return;\r\n    }\r\n\r\n    // object to be passed on firebase, please see the table and compare\r\n    let data = {\r\n      cost: this.cost,\r\n      salonId: this.salonId,\r\n      subCategory: this.subCategory,\r\n    };\r\n    // firestore database instance\r\n\r\n    const servicesInstance = collection(this.firestore, 'services');\r\n    // firebase functin for adding data to services table\r\n    addDoc(servicesInstance, data)\r\n      .then((res) => {\r\n        this.clear();\r\n        this.presentToast('Service added');\r\n\r\n        this.router.navigate(['/dashboard']);\r\n      })\r\n      .catch((err) => {\r\n        this.clear();\r\n\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  // gettingServices by salon Id\r\n  async getServices(id) {\r\n    console.log(this.salonId);\r\n    // this.firestoreService.getServicesBySalonId(id).subscribe((res) => {\r\n    //   console.log(res);\r\n    // });\r\n    const services = await this.firestoreService.getServicesBySalonId(id);\r\n    console.log(services);\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar>    <ion-buttons slot=\"start\">\r\n    <ion-back-button></ion-back-button>\r\n  </ion-buttons>\r\n    <ion-title>Adding Service</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-item class=\"length\">\r\n    <ion-label class=\"text-stl2\" position=\"floating\">Name of Service</ion-label>\r\n    <ion-input\r\n      class=\"blank\"\r\n      [(ngModel)]=\"subCategory\"\r\n      type=\"text\"\r\n      placeholder=\" \"\r\n    ></ion-input>\r\n  </ion-item>\r\n \r\n  <ion-item class=\"length\">\r\n    <ion-label class=\"text-stl2\" position=\"floating\">Cost</ion-label>\r\n    <ion-input\r\n      class=\"blank\"\r\n      [(ngModel)]=\"cost\"\r\n      type=\"number\"\r\n      placeholder=\" \"\r\n    ></ion-input>\r\n  </ion-item>\r\n\r\n\r\n\r\n  <button class=\"submit\" (click)=\"addServices()\">Submit</button>\r\n</ion-content>\r\n","import { Injectable } from '@angular/core';\r\nimport { Auth, updateProfile } from '@angular/fire/auth';\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  Firestore,\r\n  getDoc,\r\n  getDocs,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from '@angular/fire/firestore';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { from, Observable, pipe } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FirestoreService {\r\n  constructor(public firestore: Firestore, private auth: Auth,) {}\r\n\r\n  getSalonData(): Observable<any> {\r\n    const salonDb = collection(this.firestore, 'salon');\r\n\r\n    return from(\r\n      getDocs(salonDb).then((res) => {\r\n        return [\r\n          ...res.docs.map((doc: any) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          }),\r\n        ];\r\n      })\r\n    );\r\n  }\r\n  getSalonDataByUid(id): Observable<any> {\r\n    const salonDb = collection(this.firestore, 'salon');\r\n    const salonquery = query(salonDb, where('uid', '==', id));\r\n\r\n    return from(\r\n      getDocs(salonquery).then((res) => {\r\n        return [\r\n          ...res.docs.map((doc: any) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          }),\r\n        ];\r\n      })\r\n    );\r\n  }\r\n  getSpecificSalon(id: any): Observable<any> {\r\n    const salonDb = doc(this.firestore, 'salon/' + id);\r\n\r\n    return from(\r\n      getDoc(salonDb).then((res) => {\r\n        return [{ ...res.data(), id: res.id }];\r\n      })\r\n    );\r\n  }\r\n\r\n  async signUp(data: any) {\r\n    const usersInstance = collection(this.firestore, 'customer');\r\n\r\n    const createUser = await createUserWithEmailAndPassword(\r\n      this.auth,\r\n      data.email,\r\n      data.password\r\n    );\r\n\r\n    let data2 = {\r\n      ...data,\r\n      uid: createUser.user.uid,\r\n      type: 'customer',\r\n    };\r\n    return from([\r\n      updateProfile(createUser.user, {\r\n        displayName: data.firstName,\r\n      })\r\n        .then((res) => {\r\n          return [\r\n            addDoc(usersInstance, data2)\r\n              .then((res) => {\r\n                return {\r\n                  status: 'success',\r\n                  message: 'Customer Registered Succesfully',\r\n                };\r\n              })\r\n              .catch((err) => {\r\n                return {\r\n                  status: 'error',\r\n                  message: err,\r\n                };\r\n              }),\r\n          ];\r\n        })\r\n\r\n        .catch((err) => {\r\n          return {\r\n            status: 'error',\r\n            message: err,\r\n          };\r\n        }),\r\n    ]);\r\n  }\r\n\r\n  // get Appointments\r\n\r\n  getAppointments() {\r\n    const appointmentsDb = collection(this.firestore, 'Appointment');\r\n\r\n    return from(\r\n      getDocs(appointmentsDb).then((res) => {\r\n        return [\r\n          ...res.docs.map((doc: any) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          }),\r\n        ];\r\n      })\r\n    );\r\n  }\r\n  getAppointmentsBySalon(id: any) {\r\n    const appointmentsDb = collection(this.firestore, 'Appointment');\r\n\r\n    const salonquery = query(appointmentsDb, where('salonId', '==', id),orderBy('date','desc'));\r\n\r\n    return from(\r\n      getDocs(salonquery).then((res) => {\r\n        return [\r\n          ...res.docs.map((doc: any) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          }),\r\n        ];\r\n      })\r\n    );\r\n  }\r\n  // get Specific appoints required ID\r\n\r\n  getSpecificAppointments(id: any) {\r\n    const appointmentsDb = doc(this.firestore, 'Appointment/', id);\r\n\r\n    return from(\r\n      getDoc(appointmentsDb).then((res) => {\r\n        return [res.data()];\r\n      })\r\n    );\r\n  }\r\n\r\n  // get Services per Salon\r\n  async getServicesBySalonId(id: any) {\r\n    const services = collection(this.firestore, 'services');\r\n\r\n    const servicesQ = query(services, where('salonId', '==', id));\r\n\r\n    // return from(\r\n    //   getDocs(servicesQ).then((res) => {\r\n    //     return [\r\n    //       ...res.docs.map((doc: any) => {\r\n    //         return { ...doc.data(), id: doc.id };\r\n    //       }),\r\n    //     ];\r\n    //   })\r\n    // );\r\n\r\n    const snapshot = await getDocs(servicesQ);\r\n\r\n    return snapshot.docs.map(value => {\r\n      return {\r\n        subCategory: value.data()['subCategory'],\r\n        cost: value.data()['cost']\r\n      };\r\n    });\r\n  }\r\n\r\n  // get feedback\r\n\r\n  getfeedback() {\r\n    const feedback = collection(this.firestore, 'feedback');\r\n\r\n    return from(\r\n      getDocs(feedback).then((res) => {\r\n        return [\r\n          ...res.docs.map((doc: any) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          }),\r\n        ];\r\n      })\r\n    );\r\n  }\r\n  async getfeedbacksBySalon(id: any) {\r\n    const feedback = collection(this.firestore, 'feedback');\r\n\r\n    const salonquery = query(feedback, where('salonId', '==', id));\r\n\r\n    // return from(\r\n    //   getDocs(salonquery).then((res) => {\r\n    //     return [\r\n    //       ...res.docs.map((doc: any) => {\r\n    //         return { ...doc.data(), id: doc.id };\r\n    //       }),\r\n    //     ];\r\n    //   })\r\n    // );\r\n\r\n    const snapshot = await getDocs(salonquery);\r\n\r\n    return snapshot.docs.map(value => {\r\n      return {\r\n        customerID: value.data()['customerID'],\r\n        review: value.data()['review'],\r\n        salonId: value.data()['salonId'],\r\n        star: value.data()['star'],\r\n      };\r\n    });\r\n  }\r\n \r\n  // get stylist per salon\r\n  async getstylistBySalonId(id: any) {\r\n    const stylist = collection(this.firestore, 'stylist');\r\n\r\n    const stylistQ = query(stylist, where('salonId', '==', id));\r\n\r\n    // return from(\r\n    //   getDocs(stylistQ).then((res) => {\r\n    //     return [\r\n    //       ...res.docs.map((doc: any) => {\r\n    //         return { ...doc.data(), id: doc.id };\r\n    //       }),\r\n    //     ];\r\n    //   })\r\n    // );\r\n    const snapshot = await getDocs(stylistQ);\r\n\r\n    return snapshot.docs.map(value => value.data()['stylist'] as string[]);\r\n  }\r\n \r\n  }\r\n  \r\n  \r\n  \r\n\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}