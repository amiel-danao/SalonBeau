{"version":3,"file":"src_app_user-salon-services_user-salon-services_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AAEY;;;AAEnE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAqB;KACjC;CACF,CAAC;AAMK,MAAM,kCAAkC;;oHAAlC,kCAAkC;+HAAlC,kCAAkC;mIAHnC,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEX,kCAAkC,oFAFnC,yDAAY;;;;;;;;;;;;;;;;;;;;;ACbuB;AACF;AAEA;AAE6C;AAEvB;;AAW5D,MAAM,2BAA2B;;sGAA3B,2BAA2B;wHAA3B,2BAA2B;4HAPpC,yDAAY;QACZ,uDAAW;QACX,uDAAW;QACX,mGAAkC;mIAIzB,2BAA2B,mBAFvB,4EAAqB,aALlC,yDAAY;QACZ,uDAAW;QACX,uDAAW;QACX,mGAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ/B,MAAM,qBAAqB;IAGhC,YACU,cAA8B,EAC9B,SAAoB,EACpB,KAAsB,EACtB,MAAc,EACd,gBAAkC;QAJlC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,cAAS,GAAT,SAAS,CAAW;QACpB,UAAK,GAAL,KAAK,CAAiB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAPrC,YAAO,GAAW,EAAE,CAAC;QACrB,iBAAY,GAAe,EAAE,CAAC;QAQnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAEzD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;IAEK,YAAY,CAAC,OAAe;;YAChC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBACpC,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YAEH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;KAAA;IACD,QAAQ,KAAI,CAAC;IAEP,WAAW,CAAC,EAAO;;YACvB,+BAA+B;YAC/B,sEAAsE;YACtE,sBAAsB;YACtB,mDAAmD;YAEnD,6BAA6B;YAC7B,MAAM;YACN,IAAI,CAAC,YAAY,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;QAC3E,CAAC;KAAA;;0FAlCU,qBAAqB;mHAArB,qBAAqB;QCXlC,6EAAY;QAEG,8EAAmB;QAAA,4DAAY;QAI9C,yEAQc","sources":["./src/app/user-salon-services/user-salon-services-routing.module.ts","./src/app/user-salon-services/user-salon-services.module.ts","./src/app/user-salon-services/user-salon-services.page.ts","./src/app/user-salon-services/user-salon-services.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserSalonServicesPage } from './user-salon-services.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserSalonServicesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserSalonServicesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserSalonServicesPageRoutingModule } from './user-salon-services-routing.module';\n\nimport { UserSalonServicesPage } from './user-salon-services.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserSalonServicesPageRoutingModule\n  ],\n  declarations: [UserSalonServicesPage]\n})\nexport class UserSalonServicesPageModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Firestore } from '@angular/fire/firestore';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { FirestoreService } from '../services/firestore.service';\r\n\r\n@Component({\r\n  selector: 'app-user-salon-services',\r\n  templateUrl: './user-salon-services.page.html',\r\n  styleUrls: ['./user-salon-services.page.scss'],\r\n})\r\nexport class UserSalonServicesPage implements OnInit {\r\n  public salonId: string = '';\r\n  public servicesList: Array<any> = [];\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private firestore: Firestore,\r\n    private toast: ToastController,\r\n    private router: Router,\r\n    private firestoreService: FirestoreService\r\n  ) {\r\n    this.salonId = this.activatedRoute.snapshot.params['id'];\r\n\r\n    this.getServices(this.salonId);\r\n  }\r\n\r\n  async presentToast(message: string) {\r\n    const toast = await this.toast.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n\r\n    toast.present();\r\n  }\r\n  ngOnInit() {}\r\n\r\n  async getServices(id: any) {\r\n    // get all services by salon ID\r\n    // this.firestoreService.getServicesBySalonId(id).subscribe((res) => {\r\n    //   console.log(res);\r\n    //   // bind this to a selection form or a dropdown\r\n\r\n    //   this.servicesList = res;\r\n    // });\r\n    this.servicesList = await this.firestoreService.getServicesBySalonId(id);\r\n  }\r\n}\r\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>user-salon-services</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <!-- For Looping, bind to a component -->\n  <!-- *ngFor=\"let services of servicesLists\" -->\n\n  <!-- getting the value -->\n  <!-- {{services?.category}} -->\n  <!-- {{services?.subCategory}} -->\n  <!-- {{services?.cost}} -->\n</ion-content>\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}